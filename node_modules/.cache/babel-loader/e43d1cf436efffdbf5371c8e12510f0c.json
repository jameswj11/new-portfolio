{"ast":null,"code":"var _jsxFileName = \"/Users/jamesjohnson/Documents/Code/new_site/routed-site/src/components/Nav.jsx\";\nimport React, { useState, Component } from 'react';\nimport Header from './Header.jsx';\nimport { NavLink, Link, withRouter } from 'react-router-dom';\nimport './Nav.css';\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectsOpen: false\n    };\n  }\n\n  render() {\n    let openAtPageLoad;\n    let headerColor = this.props.data.titleColor;\n    let linkColor = this.props.data.navlinkColor;\n    let activeLinkColor = this.props.data.activeLinkColor; // handles sending proper text to header based on location\n\n    let headerText = getPathName(this.props.location); // handles active state for queries on projects page\n\n    let activeQuery = getQuery(this.props.location); // checks open at pageload\n\n    this.props.location.pathname === '/projects' ? openAtPageLoad = true : openAtPageLoad = false;\n    let style;\n    let location = this.props.location;\n    if (this.props.location.pathname) if (this.state.projectsOpen || openAtPageLoad) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        title: headerText,\n        data: headerColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"nav\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        exact: true,\n        activeClassName: \"active\",\n        to: \"/\",\n        onClick: () => this.setState({\n          projectsOpen: false\n        }),\n        style: location === '/' ? color : 'green',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, \"home\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        activeClassName: \"active\",\n        to: \"/projects\",\n        onClick: () => this.setState({\n          projectsOpen: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, \"projects\")), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/projects?personal\",\n        className: activeQuery === '?personal' ? 'active' : 'inactive',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }\n      }, \"personal\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/projects?professional\",\n        className: activeQuery === '?professional' ? 'active' : 'inactive',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }\n      }, \"professional\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/projects?all\",\n        className: activeQuery === '?all' ? 'active' : 'inactive',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }\n      }, \"all projects\"))), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        activeClassName: \"active\",\n        to: \"/contact\",\n        onClick: () => this.setState({\n          projectsOpen: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"contact\")))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        title: headerText,\n        data: headerColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"nav\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/\",\n        onClick: () => this.setState({\n          projectsOpen: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, \"home\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/projects\",\n        onClick: () => this.setState({\n          projectsOpen: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"projects\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/contact\",\n        onClick: () => this.setState({\n          projectsOpen: false\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"contact\")))));\n    }\n  }\n\n}\n\nfunction getPathName(location) {\n  let headerText;\n\n  if (location.pathname === '/') {\n    headerText = 'james ming johnson';\n  } else if (location.pathname === '/projects') {\n    if (location.search === '?professional') {\n      headerText = 'projects: professional';\n    } else if (location.search === '?personal') {\n      headerText = 'projects: personal';\n    } else {\n      headerText = 'projects';\n    }\n  } else if (location.pathname === '/contact') {\n    headerText = 'contact';\n  }\n\n  return headerText;\n}\n\nfunction getQuery(location) {\n  return location.search;\n}\n\nexport default withRouter(Nav);","map":{"version":3,"sources":["/Users/jamesjohnson/Documents/Code/new_site/routed-site/src/components/Nav.jsx"],"names":["React","useState","Component","Header","NavLink","Link","withRouter","Nav","constructor","props","state","projectsOpen","render","openAtPageLoad","headerColor","data","titleColor","linkColor","navlinkColor","activeLinkColor","headerText","getPathName","location","activeQuery","getQuery","pathname","style","setState","color","search"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport Header from './Header.jsx'\nimport {\n  NavLink,\n  Link,\n  withRouter\n} from 'react-router-dom';\nimport './Nav.css';\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      projectsOpen: false\n    }\n  }\n\n  render() {\n    let openAtPageLoad;\n\n    let headerColor = this.props.data.titleColor;\n    let linkColor = this.props.data.navlinkColor;\n    let activeLinkColor = this.props.data.activeLinkColor;\n\n    // handles sending proper text to header based on location\n    let headerText = getPathName(this.props.location)\n    // handles active state for queries on projects page\n    let activeQuery = getQuery(this.props.location);\n    // checks open at pageload\n    this.props.location.pathname === '/projects' ? openAtPageLoad = true : openAtPageLoad = false;\n\n    let style;\n    let location = this.props.location\n\n    if (this.props.location.pathname)\n\n      if (this.state.projectsOpen || openAtPageLoad) {\n        return (\n          <div className=\"header\">\n            <Header title={headerText} data={headerColor} />\n            <nav>\n              <ul className=\"nav\">\n                <li>\n                  <NavLink\n                    exact\n                    activeClassName=\"active\"\n                    to=\"/\"\n                    onClick={() => this.setState({ projectsOpen: false })}\n                    style={location === '/' ? color: 'green'}\n                  >home</NavLink></li>\n                <li><NavLink activeClassName=\"active\" to=\"/projects\" onClick={() => this.setState({ projectsOpen: true })}>projects</NavLink></li>\n                <ul>\n                  <li><Link to=\"/projects?personal\" className={activeQuery === '?personal' ? 'active' : 'inactive'}>personal</Link></li>\n                  <li><Link to=\"/projects?professional\" className={activeQuery === '?professional' ? 'active' : 'inactive'}>professional</Link></li>\n                  <li><Link to='/projects?all' className={activeQuery === '?all' ? 'active' : 'inactive'}>all projects</Link></li>\n                </ul>\n                <li><NavLink activeClassName=\"active\" to=\"/contact\" onClick={() => this.setState({ projectsOpen: false })}>contact</NavLink></li>\n              </ul>\n            </nav>\n          </div>\n        )\n      } else {\n        return (\n          <div className=\"header\">\n            <Header title={headerText} data={headerColor} />\n            <nav>\n              <ul>\n                <li><NavLink to=\"/\" onClick={() => this.setState({ projectsOpen: false })}>home</NavLink></li>\n                <li><NavLink to=\"/projects\" onClick={() => this.setState({ projectsOpen: true })}>projects</NavLink></li>\n                <li><NavLink to=\"/contact\" onClick={() => this.setState({ projectsOpen: false })}>contact</NavLink></li>\n              </ul>\n            </nav>\n          </div>\n        )\n      }\n  }\n}\n\nfunction getPathName(location) {\n  let headerText;\n\n  if (location.pathname === '/') {\n    headerText = 'james ming johnson';\n  } else if (location.pathname === '/projects') {\n    if (location.search === '?professional') {\n      headerText = 'projects: professional';\n    } else if (location.search === '?personal') {\n      headerText = 'projects: personal';\n    } else {\n      headerText = 'projects';\n    }\n  } else if (location.pathname === '/contact') {\n    headerText = 'contact';\n  }\n\n  return headerText;\n}\n\nfunction getQuery(location) {\n  return location.search;\n}\n\nexport default withRouter(Nav);"]},"metadata":{},"sourceType":"module"}