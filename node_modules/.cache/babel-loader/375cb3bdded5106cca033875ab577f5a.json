{"ast":null,"code":"var _jsxFileName = \"/Users/jamesjohnson/Documents/Code/new_site/routed-site/src/components/Nav.jsx\";\nimport React, { useState } from 'react';\nimport Header from './Header.jsx';\nimport { NavLink, Link, useLocation } from 'react-router-dom';\nimport './Nav.css';\n\nfunction Nav(props) {\n  const [projectsOpen, updateState] = useState(false);\n  let headerColor = props.data.color;\n  let location = useLocation();\n  let openAtPageLoad;\n  console.log(props.data); //handles sending proper text to header based on location\n\n  let headerText = getPathName(location); //handles active state for queries on projects page\n\n  let activeQuery = getQuery(location); // checks open at pageload\n\n  location.pathname === '/projects' ? openAtPageLoad = true : openAtPageLoad = false;\n\n  if (projectsOpen || openAtPageLoad) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: headerText,\n      data: headerColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      activeClassName: \"active\",\n      to: \"/\",\n      onClick: () => updateState(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"home\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      activeClassName: \"active\",\n      to: \"/projects\",\n      className: \"link\",\n      onClick: () => updateState(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"projects\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/projects?personal\",\n      className: activeQuery === 'personal' ? 'active' : 'inactive',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, \"personal\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/projects?professional\",\n      className: activeQuery === 'professional' ? 'active' : 'inactive',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, \"professional\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/projects?all\",\n      className: activeQuery === 'all' ? 'active' : 'inactive',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, \"all projects\"))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      activeClassName: \"active\",\n      to: \"/contact\",\n      className: \"link\",\n      onClick: () => updateState(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"contact\")))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: headerText,\n      data: headerColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/\",\n      className: \"link\",\n      onClick: () => updateState(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"home\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/projects\",\n      className: \"link\",\n      onClick: () => updateState(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"projects\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/contact\",\n      className: \"link\",\n      onClick: () => updateState(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"contact\")))));\n  }\n}\n\nfunction getPathName(location) {\n  let headerText;\n\n  if (location.pathname === '/') {\n    headerText = 'james ming johnson';\n  } else if (location.pathname === '/projects') {\n    if (location.search === '?professional') {\n      headerText = 'projects: professional';\n    } else if (location.search === '?personal') {\n      headerText = 'projects: personal';\n    } else {\n      headerText = 'projects';\n    }\n  } else if (location.pathname === '/contact') {\n    headerText = 'contact';\n  }\n\n  return headerText;\n}\n\nfunction getQuery(location) {\n  let query;\n\n  if (location.search === '?personal') {\n    query = 'personal';\n  } else if (location.search === '?professional') {\n    query = 'professional';\n  } else if (location.search === '?all') {\n    query = 'all';\n  } else if (location.search === '' && location.pathname === '/projects') {\n    query = 'all';\n  } else {\n    query = '';\n  }\n\n  return query;\n}\n\nexport default Nav;","map":{"version":3,"sources":["/Users/jamesjohnson/Documents/Code/new_site/routed-site/src/components/Nav.jsx"],"names":["React","useState","Header","NavLink","Link","useLocation","Nav","props","projectsOpen","updateState","headerColor","data","color","location","openAtPageLoad","console","log","headerText","getPathName","activeQuery","getQuery","pathname","search","query"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Header from './Header.jsx'\nimport {\n  NavLink,\n  Link,\n  useLocation\n} from 'react-router-dom';\nimport './Nav.css';\n\nfunction Nav(props) {\n  const [projectsOpen, updateState] = useState(false)\n  let headerColor = props.data.color;\n  let location = useLocation();\n  let openAtPageLoad;\n  \n  console.log(props.data)\n\n  //handles sending proper text to header based on location\n  let headerText = getPathName(location)\n  //handles active state for queries on projects page\n  let activeQuery = getQuery(location);\n  // checks open at pageload\n  location.pathname === '/projects' ? openAtPageLoad = true : openAtPageLoad = false;\n\n  if (projectsOpen || openAtPageLoad) {\n    return (\n      <div className=\"header\">\n        <Header title={headerText} data={headerColor} />\n        <nav>\n          <ul className=\"nav\">\n            <li><NavLink exact activeClassName=\"active\" to=\"/\" onClick={() => updateState(false)}>home</NavLink></li>\n            <li><NavLink activeClassName=\"active\" to=\"/projects\" className='link' onClick={() => updateState(true)}>projects</NavLink></li>\n            <ul>\n              <li><Link to=\"/projects?personal\" className={activeQuery === 'personal' ? 'active' : 'inactive'}>personal</Link></li>\n              <li><Link to=\"/projects?professional\" className={activeQuery === 'professional' ? 'active' : 'inactive'}>professional</Link></li>\n              <li><Link to='/projects?all' className={activeQuery === 'all' ? 'active' : 'inactive'}>all projects</Link></li>\n            </ul>\n            <li><NavLink activeClassName=\"active\" to=\"/contact\" className='link' onClick={() => updateState(false)}>contact</NavLink></li>\n          </ul>\n        </nav>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"header\">\n        <Header title={headerText} data={headerColor} />\n        <nav>\n          <ul>\n            <li><NavLink exact to=\"/\" className='link' onClick={() => updateState(false)}>home</NavLink></li>\n            <li><NavLink to=\"/projects\" className='link' onClick={() => updateState(true)}>projects</NavLink></li>\n            <li><NavLink to=\"/contact\" className='link' onClick={() => updateState(false)}>contact</NavLink></li>\n          </ul>\n        </nav>\n      </div>\n    )\n  }\n}\n\nfunction getPathName(location) {\n  let headerText;\n\n  if (location.pathname === '/') {\n    headerText = 'james ming johnson';\n  } else if (location.pathname === '/projects') {\n    if (location.search === '?professional') {\n      headerText = 'projects: professional';\n    } else if (location.search === '?personal') {\n      headerText = 'projects: personal';\n    } else {\n      headerText = 'projects';\n    }\n  } else if (location.pathname === '/contact') {\n    headerText = 'contact';\n  }\n\n  return headerText;\n}\n\nfunction getQuery(location) {\n  let query;\n  if (location.search === '?personal') {\n    query = 'personal'\n  } else if (location.search === '?professional') {\n    query = 'professional'\n  } else if (location.search === '?all') {\n    query = 'all'\n  } else if (location.search === '' && location.pathname === '/projects') {\n    query = 'all'\n  } else {\n    query = '';\n  }\n\n  return query;\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}