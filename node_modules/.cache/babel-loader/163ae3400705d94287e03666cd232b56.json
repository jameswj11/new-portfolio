{"ast":null,"code":"var _jsxFileName = \"/Users/jamesjohnson/Documents/Code/new_site/routed-site/src/components/Nav.jsx\";\nimport React, { useState, Component } from 'react';\nimport Header from './Header.jsx';\nimport { NavLink, Link, useLocation } from 'react-router-dom';\nimport './Nav.css';\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let location = useLocation();\n    let openAtPageLoad;\n    let headerColor = this.props.data.titleColor;\n    let linkColor = this.props.data.navlinkColor;\n    let activeLinkColor = this.props.data.activeLinkColor; //handles sending proper text to header based on location\n\n    let headerText = getPathName(location); //handles active state for queries on projects page\n\n    let activeQuery = getQuery(location); // checks open at pageload\n\n    location.pathname === '/projects' ? openAtPageLoad = true : openAtPageLoad = false;\n\n    if (projectsOpen || openAtPageLoad) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        title: headerText,\n        data: headerColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"nav\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        exact: true,\n        activeStyle: {\n          color: 'green'\n        },\n        activeClassName: \"active\",\n        to: \"/\",\n        onClick: () => updateState(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }, \"home\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        activeClassName: \"active\",\n        to: \"/projects\",\n        onClick: () => updateState(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, \"projects\")), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/projects?personal\",\n        className: activeQuery === 'personal' ? 'active' : 'inactive',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"personal\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/projects?professional\",\n        className: activeQuery === 'professional' ? 'active' : 'inactive',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, \"professional\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/projects?all\",\n        className: activeQuery === 'all' ? 'active' : 'inactive',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, \"all projects\"))), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        activeClassName: \"active\",\n        to: \"/contact\",\n        onClick: () => updateState(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, \"contact\")))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        title: headerText,\n        data: headerColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"nav\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        exact: true,\n        to: \"/\",\n        className: \"link\",\n        onClick: () => updateState(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, \"home\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/projects\",\n        className: \"link\",\n        onClick: () => updateState(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"projects\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/contact\",\n        className: \"link\",\n        onClick: () => updateState(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, \"contact\")))));\n    }\n  }\n\n}\n\nfunction getPathName(location) {\n  let headerText;\n\n  if (location.pathname === '/') {\n    headerText = 'james ming johnson';\n  } else if (location.pathname === '/projects') {\n    if (location.search === '?professional') {\n      headerText = 'projects: professional';\n    } else if (location.search === '?personal') {\n      headerText = 'projects: personal';\n    } else {\n      headerText = 'projects';\n    }\n  } else if (location.pathname === '/contact') {\n    headerText = 'contact';\n  }\n\n  return headerText;\n}\n\nfunction getQuery(location) {\n  let query;\n\n  if (location.search === '?personal') {\n    query = 'personal';\n  } else if (location.search === '?professional') {\n    query = 'professional';\n  } else if (location.search === '?all') {\n    query = 'all';\n  } else if (location.search === '' && location.pathname === '/projects') {\n    query = 'all';\n  } else {\n    query = '';\n  }\n\n  return query;\n}\n\nexport default Nav;","map":{"version":3,"sources":["/Users/jamesjohnson/Documents/Code/new_site/routed-site/src/components/Nav.jsx"],"names":["React","useState","Component","Header","NavLink","Link","useLocation","Nav","constructor","props","render","location","openAtPageLoad","headerColor","data","titleColor","linkColor","navlinkColor","activeLinkColor","headerText","getPathName","activeQuery","getQuery","pathname","projectsOpen","color","updateState","search","query"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport Header from './Header.jsx'\nimport {\n  NavLink,\n  Link,\n  useLocation\n} from 'react-router-dom';\nimport './Nav.css';\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let location = useLocation();\n    let openAtPageLoad;\n\n    let headerColor = this.props.data.titleColor;\n    let linkColor = this.props.data.navlinkColor;\n    let activeLinkColor = this.props.data.activeLinkColor;\n\n    //handles sending proper text to header based on location\n    let headerText = getPathName(location)\n    //handles active state for queries on projects page\n    let activeQuery = getQuery(location);\n    // checks open at pageload\n    location.pathname === '/projects' ? openAtPageLoad = true : openAtPageLoad = false;\n\n    if (projectsOpen || openAtPageLoad) {\n      return (\n        <div className=\"header\">\n          <Header title={headerText} data={headerColor} />\n          <nav>\n            <ul className=\"nav\">\n              <li><Link exact activeStyle={{ color: 'green' }} activeClassName=\"active\" to=\"/\" onClick={() => updateState(false)}>home</Link></li>\n              <li><Link activeClassName=\"active\" to=\"/projects\" onClick={() => updateState(true)}>projects</Link></li>\n              <ul>\n                <li><Link to=\"/projects?personal\" className={activeQuery === 'personal' ? 'active' : 'inactive'}>personal</Link></li>\n                <li><Link to=\"/projects?professional\" className={activeQuery === 'professional' ? 'active' : 'inactive'}>professional</Link></li>\n                <li><Link to='/projects?all' className={activeQuery === 'all' ? 'active' : 'inactive'}>all projects</Link></li>\n              </ul>\n              <li><Link activeClassName=\"active\" to=\"/contact\" onClick={() => updateState(false)}>contact</Link></li>\n            </ul>\n          </nav>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"header\">\n          <Header title={headerText} data={headerColor} />\n          <nav>\n            <ul>\n              <li><Link exact to=\"/\" className='link' onClick={() => updateState(false)}>home</Link></li>\n              <li><Link to=\"/projects\" className='link' onClick={() => updateState(true)}>projects</Link></li>\n              <li><Link to=\"/contact\" className='link' onClick={() => updateState(false)}>contact</Link></li>\n            </ul>\n          </nav>\n        </div>\n      )\n    }\n  }\n}\n\nfunction getPathName(location) {\n  let headerText;\n\n  if (location.pathname === '/') {\n    headerText = 'james ming johnson';\n  } else if (location.pathname === '/projects') {\n    if (location.search === '?professional') {\n      headerText = 'projects: professional';\n    } else if (location.search === '?personal') {\n      headerText = 'projects: personal';\n    } else {\n      headerText = 'projects';\n    }\n  } else if (location.pathname === '/contact') {\n    headerText = 'contact';\n  }\n\n  return headerText;\n}\n\nfunction getQuery(location) {\n  let query;\n  if (location.search === '?personal') {\n    query = 'personal'\n  } else if (location.search === '?professional') {\n    query = 'professional'\n  } else if (location.search === '?all') {\n    query = 'all'\n  } else if (location.search === '' && location.pathname === '/projects') {\n    query = 'all'\n  } else {\n    query = '';\n  }\n\n  return query;\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}